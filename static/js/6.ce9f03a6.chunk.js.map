{"version":3,"sources":["services/api.jsx","views/MovieDetailsPage.jsx"],"names":["axios","defaults","baseURL","API_KEY","fetchImages","url","a","get","results","console","log","fetchTrendingMovies","findFilms","name","findFilmById","movieId","findActors","findReview","Cast","lazy","Review","MovieDetailsPage","useRouteMatch","useParams","useState","movie","setMovie","genres","setGenres","location","useLocation","history","useHistory","useEffect","res","data","fetchFilms","fallback","onClick","push","state","from","src","poster_path","alt","title","Math","round","popularity","overview","map","genre","join","genresList","to","pathname","path"],"mappings":"iWACAA,IAAMC,SAASC,QAAU,+BACzB,IAAMC,EAAU,mCAEVC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIN,IAAMO,IAAIF,GADd,cACZG,EADY,OAElBC,QAAQC,IAAI,WAAYF,GAFN,kBAGXA,GAHW,2CAAH,sDAMV,SAASG,IACd,OAAOP,EAAY,+BAAD,OAAgCD,IAG7C,SAASS,EAAUC,GACxB,OAAOT,EAAY,yBAAD,OACSD,EADT,wCACgDU,IAI7D,SAASC,EAAaC,GAC3B,OAAOX,EAAY,UAAD,OAAWW,EAAX,oBAA8BZ,EAA9B,oBAGb,SAASa,EAAWD,GACzB,OAAOX,EAAY,UAAD,OACNW,EADM,4BACqBZ,EADrB,oBAKb,SAASc,EAAWF,GACzB,OAAOX,EAAY,UAAD,OACNW,EADM,4BACqBZ,EADrB,6B,wJClBde,EAAOC,gBAAK,kBAAM,gCAClBC,EAASD,gBAAK,kBAAM,iCAEX,SAASE,IACtB,IAAQhB,EAAQiB,cAARjB,IACFU,EAAYQ,cAAZR,QACN,EAA0BS,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAWC,cACXC,EAAUC,cAChBvB,QAAQC,IAAI,gBAAiBmB,GAE7BI,qBAAU,WAAM,4CACd,4BAAA3B,EAAA,+EAEsBQ,YAAaC,GAFnC,OAEUmB,EAFV,OAGIR,EAASQ,EAAIC,MACbP,EAAUM,EAAIC,KAAKR,QAJvB,0GADc,uBAAC,WAAD,wBAQdS,KACC,CAACrB,IAcJ,OACE,qCACE,cAAC,WAAD,CAAUsB,SAAU,2FACpB,wBAAQC,QAPS,WAAO,IAAD,MACzBP,EAAQQ,KAAR,oBAAaV,EAASW,aAAtB,iBAAa,EAAgBC,YAA7B,aAAa,EAAsBZ,gBAAnC,QAA+C,MAM7C,qBACA,gCACE,8BACE,qBACEa,IAAG,0CAAqCjB,EAAMkB,aAC9CC,IAAKnB,EAAMoB,UAIf,gCACE,6BAAKpB,EAAMoB,QACX,kDAAqBC,KAAKC,MAAMtB,EAAMuB,eACtC,2CACA,4BAAIvB,EAAMwB,WACV,wCACCtB,GAAU,4BA9BA,SAACA,GAClB,OAAOA,EACJuB,KAAI,SAACC,GACJ,OAAOA,EAAMtC,QAEduC,KAAK,MAyBaC,CAAW1B,QAE5B,gCACE,wDACA,+BACE,6BACE,cAAC,IAAD,CAAM2B,GAAI,CAAEC,SAAS,GAAD,OAAKlD,EAAL,SAAiBmC,MAAO,CAAEC,KAAM,MAApD,oBAIF,6BACE,cAAC,IAAD,CAAMa,GAAI,CAAEC,SAAS,GAAD,OAAKlD,EAAL,WAAmBmC,MAAO,CAAEC,KAAM,MAAtD,+BAOR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAI,UAAKnD,EAAL,SAAX,SACE,cAACa,EAAD,CAAMH,QAASA,MAEjB,cAAC,IAAD,CAAOyC,KAAI,UAAKnD,EAAL,WAAX,SACE,cAACe,EAAD,CAAQL,QAASA,SAGrB,cAAC,WAAD","file":"static/js/6.ce9f03a6.chunk.js","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"aeea02db324303291298da0524ee2653\";\r\n\r\nconst fetchImages = async (url) => {\r\n  const results = await axios.get(url);\r\n  console.log(\"response\", results);\r\n  return results;\r\n};\r\n\r\nexport function fetchTrendingMovies() {\r\n  return fetchImages(`/trending/movie/day?api_key=${API_KEY}`);\r\n}\r\n\r\nexport function findFilms(name) {\r\n  return fetchImages(\r\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${name}`\r\n  );\r\n}\r\n\r\nexport function findFilmById(movieId) {\r\n  return fetchImages(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\nexport function findActors(movieId) {\r\n  return fetchImages(\r\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function findReview(movieId) {\r\n  return fetchImages(\r\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\n","import { lazy, Suspense } from \"react\";\r\nimport { findFilmById } from \"../services/api\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nconst Cast = lazy(() => import(\"./Cast\"));\r\nconst Review = lazy(() => import(\"./Review\"));\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { url } = useRouteMatch();\r\n  let { movieId } = useParams();\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [genres, setGenres] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  console.log(\"location film\", location);\r\n\r\n  useEffect(() => {\r\n    async function fetchFilms() {\r\n      try {\r\n        const res = await findFilmById(movieId);\r\n        setMovie(res.data);\r\n        setGenres(res.data.genres);\r\n      } catch (e) {}\r\n    }\r\n    fetchFilms();\r\n  }, [movieId]);\r\n\r\n  const genresList = (genres) => {\r\n    return genres\r\n      .map((genre) => {\r\n        return genre.name;\r\n      })\r\n      .join(\", \");\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    history.push(location.state?.from?.location ?? \"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<div>ЗАГРУЖАЕМ</div>}></Suspense>\r\n      <button onClick={handleGoBack}>GO BACK</button>\r\n      <div>\r\n        <div>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <h1>{movie.title}</h1>\r\n          <p>User popularity: {Math.round(movie.popularity)}</p>\r\n          <h2> Overview</h2>\r\n          <p>{movie.overview}</p>\r\n          <h3>Genres</h3>\r\n          {genres && <p>{genresList(genres)}</p>}\r\n        </div>\r\n        <div>\r\n          <h4>Additional information</h4>\r\n          <ul>\r\n            <li>\r\n              <Link to={{ pathname: `${url}/cast`, state: { from: \"/\" } }}>\r\n                Cast\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={{ pathname: `${url}/review`, state: { from: \"/\" } }}>\r\n                Review\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Switch>\r\n        <Route path={`${url}/cast`}>\r\n          <Cast movieId={movieId} />\r\n        </Route>\r\n        <Route path={`${url}/review`}>\r\n          <Review movieId={movieId} />\r\n        </Route>\r\n      </Switch>\r\n      <Suspense />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}